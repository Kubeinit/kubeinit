---
# Copyright kubeinit.com
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Configure the service node
  block:
    #
    # k8s repos
    #

    - name: Remove repo before adding it
      file:
        path: /etc/yum.repos.d/kubernetes.repo
        state: absent

    - name: Creating a repository file for Kubernetes
      file:
        path: /etc/yum.repos.d/kubernetes.repo
        state: touch
        mode: '0644'

    - name: Adding repository details in Kubernetes repo file.
      blockinfile:
        path: /etc/yum.repos.d/kubernetes.repo
        block: |
         [kubernetes]
         name=Kubernetes
         baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
         enabled=1
         gpgcheck=1
         repo_gpgcheck=1
         gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
                https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

    - name: update packages
      yum:
        name: "*"
        state: latest
        use_backend: dnf
      register: update_packages

    - name: Reboot immediately after the package update
      shell: "sleep 5 && reboot"
      async: 1
      poll: 0
      when: update_packages is changed

    - name: Wait for the reboot to complete if there was a change.
      wait_for:
        port: 22
        host: "{{ hostvars[kubeinit_deployment_node_name].ansible_host }}"
        search_regex: OpenSSH
        delay: 10
        timeout: 7200
      when: update_packages is changed
      delegate_to: "{{ hostvars[kubeinit_deployment_node_name].target }}"

    - name: install services requirements
      yum:
        name: "{{ kubeinit_k8s_service_dependencies }}"
        state: present
        use_backend: dnf

    - name: install common requirements
      yum:
        name: "{{ kubeinit_k8s_common_dependencies }}"
        state: present
        use_backend: dnf

    # #
    # # Configure local registry
    # #
    #
    # - name: Configure a local container image registry
    #   # delegate_facts: true
    #   import_role:
    #     name: ../../roles/kubeinit_registry
    #     tasks_from: main
    #   when: kubeinit_registry_enabled|bool

    #
    # Configure bind
    #

    - name: Configure Bind
      # delegate_facts: true
      import_role:
        name: ../../roles/kubeinit_bind
        tasks_from: main

    #
    # Configure HAproxy
    #

    - name: Configure HAProxy
      # delegate_facts: true
      import_role:
        name: ../../roles/kubeinit_haproxy
        tasks_from: main

    #
    # Configure httpd
    #

    - name: Configure Apache
      # delegate_facts: true
      import_role:
        name: ../../roles/kubeinit_apache
        tasks_from: main

    #
    # Include the install configuration
    #

    - name: "Render root keys in the service node"
      shell: |
        cd
        mkdir ~/.ssh
        ssh-keygen -t rsa -N "" -f .ssh/id_rsa <<< y
      register: render_service_keys
      changed_when: "render_service_keys.rc == 0"

    - name: get root service machine public key
      command: cat /root/.ssh/id_rsa.pub
      register: public_key_service_content
      changed_when: "public_key_service_content.rc == 0"

    - name: register the public key of the root service machine public key
      set_fact:
        kubeinit_provision_service_public_key={{ public_key_service_content.stdout }}

    #- name: Autoload kubeconfig
    #  shell: |
    #    echo "export KUBECONFIG=~/install_dir/auth/kubeconfig" >> ~/.bashrc
    #  ignore_errors: yes
    #  register: autoload
    #  changed_when: "autoload.rc == 0"

  delegate_to: "{{ kubeinit_deployment_node_name }}"
  tags:
    - provision_libvirt
