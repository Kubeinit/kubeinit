---
# Copyright kubeinit contributors
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Setup the cluster provision container
  ansible.builtin.include_role:
    name: kubeinit.kubeinit.kubeinit_services
    tasks_from: create_provision_container.yml
  vars:
    kubeinit_deployment_node_name: "{{ kubeinit_provision_service_node }}"
    kubeinit_deployment_pod_name: "{{ hostvars[kubeinit_provision_service_node].guest_name }}-pod"
    kubeinit_deployment_delegate: "{{ hostvars[kubeinit_provision_service_node].target }}"
    kubeinit_deployment_os: "{{ hostvars[kubeinit_provision_service_node].os }}"

- name: Configure the provision service node
  block:

    - when: hostvars[kubeinit_provision_service_node].os == 'centos'
      block:

        - name: Remove repo before adding it
          ansible.builtin.file:
            path: /etc/yum.repos.d/kubernetes.repo
            state: absent

        - name: Creating a repository file for Kubernetes
          ansible.builtin.file:
            path: /etc/yum.repos.d/kubernetes.repo
            state: touch
            mode: '0644'

        - name: Adding repository details in Kubernetes repo file.
          ansible.builtin.blockinfile:
            block: |
              [kubernetes]
              name=Kubernetes
              baseurl=https://pkgs.k8s.io/core:/stable:/v{{ kubeinit_k8s_kubernetes_version }}/rpm/
              enabled=1
              gpgcheck=1
              gpgkey=https://pkgs.k8s.io/core:/stable:/v{{ kubeinit_k8s_kubernetes_version }}/rpm/repodata/repomd.xml.key
              exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni
            path: /etc/yum.repos.d/kubernetes.repo

        - name: Install requirements
          ansible.builtin.command: dnf install -y kubectl-{{ kubeinit_k8s_kubernetes_version }}.* --disableexcludes=kubernetes
          register: _result
          changed_when: "_result.rc == 0"

    - when: hostvars[kubeinit_provision_service_node].os == 'debian'
      block:

        - name: Add kubernetes repo for latest kubectl (Debian)
          ansible.builtin.shell: |
            set -eo pipefail
            apt-get install -y apt-transport-https ca-certificates curl gpg
            mkdir -p /etc/apt/keyrings
            curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
            echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list
            apt-get update
            apt-get install -y kubectl
            apt-mark hold kubectl
          args:
            executable: /bin/bash
          register: _result
          changed_when: "_result.rc == 0"

    - when: hostvars[kubeinit_provision_service_node].os == 'ubuntu'
      block:

        - name: Add kubernetes repo for latest kubectl (Ubuntu)
          ansible.builtin.shell: |
            set -eo pipefail
            apt-get install -y apt-transport-https ca-certificates curl gpg
            curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
            echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list
            apt-get update
            apt-get install -y kubectl
            apt-mark hold kubectl
          args:
            executable: /bin/bash
          register: _result
          changed_when: "_result.rc == 0"

  delegate_to: "{{ kubeinit_provision_service_node }}"
