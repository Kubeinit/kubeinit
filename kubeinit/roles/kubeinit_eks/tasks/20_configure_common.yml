---
# Copyright kubeinit.com
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

#
# Initial config
#

- name: Configure common requirements in guests
  block:

    - name: Install common requirements
      ansible.builtin.yum:
        name: "{{ kubeinit_eks_common_dependencies }}"
        state: present
        use_backend: dnf

    - name: Enable kernel modules and IP forward
      ansible.builtin.shell: |
        modprobe br_netfilter
        echo br_netfilter > /etc/modules-load.d/br_netfilter.conf
        modprobe overlay
        echo overlay > /etc/modules-load.d/overlay.conf
        echo '1' > /proc/sys/net/ipv4/ip_forward
        mkdir -p /proc/sys/net/bridge/
        echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
        sysctl -p
      changed_when: false

    #
    # Configuring repositories
    #

    #
    # cri-o repos
    #

    - name: Remove repo before adding it
      ansible.builtin.file:
        path: /etc/yum.repos.d/crio.repo
        state: absent

    - name: Creating a repository file for cri-o
      ansible.builtin.file:
        path: /etc/yum.repos.d/crio.repo
        state: touch
        mode: '0644'

    - name: Adding repository details in the cri-o repo file.
      ansible.builtin.blockinfile:
        path: /etc/yum.repos.d/crio.repo
        block: |
          [devel_kubic_libcontainers_stable]
          name=Stable Releases of Upstream github.com/containers packages (CentOS_8)
          type=rpm-md
          baseurl=https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/CentOS_8/
          gpgcheck=1
          gpgkey=https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/CentOS_8/repodata/repomd.xml.key
          enabled=1
          [devel_kubic_libcontainers_stable_cri-o_1.18]
          name=Last release available in 1.18 branch (CentOS_8)
          type=rpm-md
          baseurl=https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.18/CentOS_8/
          gpgcheck=1
          gpgkey=https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.18/CentOS_8/repodata/repomd.xml.key
          enabled=1

    #
    # eks repos
    #

    - name: Remove repo before adding it
      ansible.builtin.file:
        path: /etc/yum.repos.d/kubernetes.repo
        state: absent

    - name: Creating a repository file for Kubernetes
      ansible.builtin.file:
        path: /etc/yum.repos.d/kubernetes.repo
        state: touch
        mode: '0644'

    - name: Adding repository details in Kubernetes repo file.
      ansible.builtin.blockinfile:
        path: /etc/yum.repos.d/kubernetes.repo
        block: |
         [kubernetes]
         name=Kubernetes
         baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
         enabled=1
         gpgcheck=1
         repo_gpgcheck=1
         gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
                https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

    # - name: Upgrade all packages
    #   ansible.builtin.yum:
    #     name: '*'
    #     state: latest

    #
    # cri-o config
    #

    # The three steps beforeshould provide the correct repo to install cri-o
    - name: Install the latest version of cri-o
      ansible.builtin.yum:
        name: cri-o
        state: present

    - name: Creating cri-o sysctl file
      ansible.builtin.file:
        path: /etc/sysctl.d/99-kubernetes-cri.conf
        state: touch
        mode: '0644'

    - name: Configure cri-o ipv4_forward
      ansible.builtin.blockinfile:
        path: /etc/sysctl.d/99-kubernetes-cri.conf
        block: |
         net.bridge.bridge-nf-call-iptables  = 1
         net.ipv4.ip_forward                 = 1
         net.bridge.bridge-nf-call-ip6tables = 1

    - name: Load system new sysctl parameters
      ansible.builtin.command: sysctl -p/etc/sysctl.d/99-kubernetes-cri.conf
      changed_when: false

    # Not working anymore for this packages versions.
    # - name: Update cri-o config systemd to cgroupfs
    #   ansible.builtin.command: sed -i 's#group_manager = "systemd"#group_manager = "cgroupfs"#g' /etc/crio/crio.conf
    #   changed_when: false

    - name: Update cri-o config overlay to overlay2
      ansible.builtin.command: sed -i 's/[#|^]storage_driver = .*/storage_driver = "overlay2"/g' /etc/crio/crio.conf
      changed_when: false

    - name: Update cri-o config storage option to overlay2
      ansible.builtin.command: sed -i 's/[#|^]storage_option = .*/storage_option = [ "overlay2.override_kernel_check=1" ]/g' /etc/crio/crio.conf
      changed_when: false

    - name: Create new net.d folder
      ansible.builtin.file:
        path: /etc/crio/net.d
        state: directory
        mode: '0644'

    - name: Update cri-o config network dir to crio folder
      ansible.builtin.command: sed -i 's?[#|^]network_dir = .*?network_dir = "/etc/crio/net.d/"?g' /etc/crio/crio.conf
      changed_when: false

    - name: Update cri-o config conmon to the correct path
      ansible.builtin.command: sed 's|/usr/libexec/crio/conmon|/usr/bin/conmon|' -i /etc/crio/crio.conf
      changed_when: false

    - name: Creating kubelet default file
      ansible.builtin.file:
        path: /etc/default/kubelet
        state: touch
        mode: '0644'

    - name: Configure kubelet defaults
      ansible.builtin.blockinfile:
        path: /etc/default/kubelet
        block: |
          KUBELET_EXTRA_ARGS=--runtime-cgroups=/systemd/system.slice --kubelet-cgroups=/systemd/system.slice --feature-gates="AllAlpha=false,RunAsGroup=true" --container-runtime=remote --cgroup-driver=cgroupfs --container-runtime-endpoint='unix:///var/run/crio/crio.sock' --runtime-request-timeout=5m

    - name: Systemd reload
      ansible.builtin.command: systemctl daemon-reload
      changed_when: false

    - name: Creating cri-o bridge
      # From: https://github.com/cri-o/cri-o/blob/master/contrib/cni/10-crio-bridge.conf
      ansible.builtin.file:
        path: /etc/crio/net.d/10-crio-bridge.conf
        state: touch
        mode: '0644'

    - name: Configure cri-o bridge
      ansible.builtin.blockinfile:
        path: /etc/crio/net.d/10-crio-bridge.conf
        block: |
         {
             "cniVersion": "0.3.1",
             "name": "crio-bridge",
             "type": "bridge",
             "bridge": "cni0",
             "isGateway": true,
             "ipMasq": true,
             "hairpinMode": true,
             "ipam": {
                 "type": "host-local",
                 "routes": [
                     { "dst": "0.0.0.0/0" },
                     { "dst": "1100:200::1/24" }
                 ],
                 "ranges": [
                     [{ "subnet": "10.244.0.0/16" }],
                     [{ "subnet": "1100:200::/24" }]
                 ]
             }
         }

    - name: Create hooks folder
      ansible.builtin.file:
        path: /usr/share/containers/oci/hooks.d
        state: directory
        mode: '0777'

    - name: Add insecure registry
      community.general.ini_file:
        path: /etc/containers/registries.conf
        section: registries.insecure
        option: registries
        value: ['{{ kubeinit_registry_uri }}']
        mode: '0600'
        backup: yes
      when: "'registry' in hostvars[groups['service_nodes'][0]].services"

    - name: Enable/start/status cri-o
      ansible.builtin.shell: |
        systemctl enable crio
        systemctl start crio
        systemctl status crio
      changed_when: false

    #
    # Kubernetes config
    #

    - name: Install requirements
      ansible.builtin.package:
        name:
          - tc
          - yum-utils
          - device-mapper-persistent-data
          - lvm2
          - "kubelet-{{ kubeinit_eks_kubernetes_version }}"
          - "kubeadm-{{ kubeinit_eks_kubernetes_version }}"
          - "kubectl-{{ kubeinit_eks_kubernetes_version }}"
        state: present

    - name: Enable kubelet
      ansible.builtin.systemd:
        state: restarted
        name: kubelet
        enabled: yes

  delegate_to: "{{ hostvars[kubeinit_deployment_node_name].ansible_host }}"
