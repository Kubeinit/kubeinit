---
# Copyright kubeinit.com
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


- name: Configure the service node
  block:

    - name: Prepare podman
      ansible.builtin.include_role:
        name: ../../roles/kubeinit_prepare
        tasks_from: prepare_podman
        public: yes

    - name: Create a minimal podman pod for the service containers running on service node VMs
      containers.podman.podman_pod:
        name: "{{ kubeinit_services_pod_name }}"
        dns:
          - "{{ kubeinit_services_service_address }}"
          - "{{ kubeinit_common_dns_master }}"
        dns_search: "{{ kubeinit_inventory_cluster_name }}.{{ kubeinit_inventory_cluster_domain }}"
        state: created

    - name: install common requirements
      ansible.builtin.yum:
        name: "{{ kubeinit_eks_common_dependencies }}"
        state: present
        use_backend: dnf

    - name: Add the local DNS server as a local resolver
      ansible.builtin.lineinfile:
        path: /etc/resolv.conf
        line: "nameserver {{ kubeinit_bind_service_address }}"
        insertbefore: nameserver.*

    #
    # Kubernetes config
    #

    - name: install requirements for kubectl
      ansible.builtin.package:
        name:
          - "kubectl-{{ kubeinit_eks_kubernetes_version }}"
        state: present

    - name: install services requirements
      ansible.builtin.yum:
        name: "{{ kubeinit_eks_service_dependencies }}"
        state: present
        use_backend: dnf

    #
    # Configure local registry
    #

    - name: "Get the required container images"
      ansible.builtin.shell: |
        set -o pipefail
        git clone https://github.com/aws/eks-distro.git
        cd eks-distro
        ./development/pull-all.sh
        podman images | grep public.ecr.aws | awk '{ print $1 ":" $2}' > ~/kubeinit_deployment_images.txt
      args:
        executable: /bin/bash
      register: render_images_list
      changed_when: "render_images_list.rc == 0"

    - name: Configure a local container image registry
      # delegate_facts: true
      ansible.builtin.import_role:
        name: ../../roles/kubeinit_registry
        tasks_from: main
      when: kubeinit_registry_enabled|bool

    - name: Mirror local registry
      ansible.builtin.import_role:
        name: ../../roles/kubeinit_registry
        tasks_from: 20_mirror_eks.yml
      when: kubeinit_registry_enabled|bool

    #
    # Configure bind
    #

    - name: Configure Bind
      # delegate_facts: true
      ansible.builtin.import_role:
        name: ../../roles/kubeinit_bind
        tasks_from: main

    #
    # Configure HAproxy
    #

    - name: Configure HAProxy
      # delegate_facts: true
      ansible.builtin.import_role:
        name: ../../roles/kubeinit_haproxy
        tasks_from: main

    #
    # Configure httpd
    #

    - name: Configure Apache
      # delegate_facts: true
      ansible.builtin.import_role:
        name: ../../roles/kubeinit_apache
        tasks_from: main

    #
    # Include the install configuration
    #

    - name: "Render root keys in the service node"
      ansible.builtin.shell: |
        cd
        mkdir ~/.ssh
        ssh-keygen -t rsa -N "" -f .ssh/id_rsa <<< y
      register: render_service_keys
      changed_when: "render_service_keys.rc == 0"

    - name: get root service machine public key
      ansible.builtin.command: cat /root/.ssh/id_rsa.pub
      register: public_key_service_content
      changed_when: "public_key_service_content.rc == 0"

    - name: register the public key of the root service machine public key
      ansible.builtin.set_fact:
        kubeinit_provision_service_public_key={{ public_key_service_content.stdout }}

  delegate_to: "{{ hostvars[kubeinit_deployment_node_name].ansible_host }}"
