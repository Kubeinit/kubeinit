---
# Copyright kubeinit.com
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

#
# Configure local registry
#

- name: Configure the service node
  block:

    - name: Prepare podman
      # delegate_facts: true
      ansible.builtin.import_role:
        name: ../../roles/kubeinit_prepare
        tasks_from: prepare_podman

    - name: "Render net info"
      ansible.builtin.shell: |
        set -o pipefail
        echo "{{ kubeinit_rke_pod_cidr }}" > ~/pod_cidr
        echo "{{ kubeinit_rke_service_cidr }}" > ~/service_cidr
      args:
        executable: /bin/bash
      register: render_net_info
      changed_when: "render_net_info.rc == 0"

    - name: Render the cluster template
      ansible.builtin.template:
        src: "cluster.yml.j2"
        dest: "~/cluster.yml"
        mode: '0644'

    - name: Download rancher
      ansible.builtin.get_url:
        url: "https://github.com/rancher/rke/releases/download/{{ kubeinit_rke_registry_release_tag }}/rke_linux-amd64"
        dest: ~/
        mode: '0755'

    - name: "Adjust installer"
      ansible.builtin.shell: |
        mv ~/rke_linux-amd64 ~/rke
        chmod +x rke
      register: adjust_installer
      changed_when: "adjust_installer.rc == 0"

    - name: "Render the required container images"
      ansible.builtin.shell: |
        set -o pipefail
        ~/rke config --system-images | grep -v 'INFO' | grep -v 'level=info' > ~/kubeinit_deployment_images.txt
      args:
        executable: /bin/bash
      register: render_images_list
      changed_when: "render_images_list.rc == 0"

    - name: Configure a local container image registry
      # delegate_facts: true
      ansible.builtin.import_role:
        name: ../../roles/kubeinit_registry
        tasks_from: main
      when: kubeinit_registry_enabled|bool

    - name: Mirror local registry
      ansible.builtin.import_role:
        name: ../../roles/kubeinit_registry
        tasks_from: 20_mirror_rke.yml
      when: kubeinit_registry_enabled|bool

    - name: Enable insecure registry in Docker
      ansible.builtin.shell: |
        # This is mandatory so the cluster nodes can fetch the
        # images from the local (insecure) registry
        sed -i '/^ExecStart=/ s/$/ --insecure-registry {{ kubeinit_registry_uri }}/' /lib/systemd/system/docker.service
        systemctl daemon-reload
        systemctl restart docker
      changed_when: false
      delegate_to: "{{ hostvars[item].ansible_host }}"
      with_items:
        - "{{ groups['all_master_nodes'] + groups['all_worker_nodes'] | list }}"
      when: kubeinit_registry_enabled|bool

    #
    # Configure bind
    #

    - name: Configure Bind
      # delegate_facts: true
      ansible.builtin.import_role:
        name: ../../roles/kubeinit_bind
        tasks_from: main

    #
    # Configure HAproxy
    #

    - name: Configure HAProxy
      # delegate_facts: true
      ansible.builtin.import_role:
        name: ../../roles/kubeinit_haproxy
        tasks_from: main

    #
    # Configure httpd
    #

    - name: Configure Apache
      # delegate_facts: true
      ansible.builtin.import_role:
        name: ../../roles/kubeinit_apache
        tasks_from: main

    #
    # Include the install configuration
    #

    - name: "Render root keys in the service node"
      ansible.builtin.shell: |
        set -o pipefail
        cd
        mkdir -p ~/.ssh
        rm -f ~/.ssh/id_rsa && echo -e 'y\n' | ssh-keygen -f ~/.ssh/id_rsa -t rsa -N ''
      args:
        executable: /bin/bash
      register: render_service_keys
      changed_when: "render_service_keys.rc == 0"

    - name: get root service machine public key
      ansible.builtin.command: cat /root/.ssh/id_rsa.pub
      register: public_key_service_content
      changed_when: "public_key_service_content.rc == 0"

    - name: register the public key of the root service machine public key
      ansible.builtin.set_fact:
        kubeinit_provision_service_public_key={{ public_key_service_content.stdout }}

  delegate_to: "{{ hostvars[kubeinit_deployment_node_name].ansible_host }}"
