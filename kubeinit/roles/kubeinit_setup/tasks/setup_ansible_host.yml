---
# Copyright kubeinit contributors
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


- name: Confirm that we can run ssh to _param_ansible_host
  ansible.builtin.command: |
    ssh {{ hostvars[_param_ansible_host].ansible_ssh_common_args }} {{ kubeinit_facts_hostvars.remote_user }}@{{ hostvars[_param_ansible_host].ansible_host }} echo connected
  register: _result_ssh
  failed_when: _result_ssh is not defined
  changed_when: "_result_ssh.rc == 0"
  delegate_to: localhost

- name: Provide informative message if ssh connect fails
  ansible.builtin.fail:
    msg: "KubeInit setup requires ssh remote access to {{ kubeinit_facts_hostvars.remote_user }}@{{ hostvars[_param_ansible_host].ansible_host }}"
  when: _result_ssh.stdout != 'connected'

- name: Confirm that we can run ssh to _param_ansible_host, and sudo without a password
  ansible.builtin.command: |
    ssh {{ hostvars[_param_ansible_host].ansible_ssh_common_args }} {{ kubeinit_facts_hostvars.remote_user }}@{{ hostvars[_param_ansible_host].ansible_host }} sudo echo sudoer
  register: _result_sudo
  failed_when: _result_sudo is not defined
  changed_when: "_result_sudo.rc == 0"
  delegate_to: localhost

- name: Provide informative message if sudo on ssh connect fails
  ansible.builtin.fail:
    msg: "KubeInit setup requires {{ kubeinit_facts_hostvars.remote_user }} be able to run sudo on remote host {{ hostvars[_param_ansible_host].ansible_host }}"
  when: _result_sudo.stdout != 'sudoer'

- name: Confirm that we can run ssh to _param_ansible_host, sudo without a password, and the python interpreter is present
  ansible.builtin.command: |
    ssh {{ hostvars[_param_ansible_host].ansible_ssh_common_args }} {{ kubeinit_facts_hostvars.remote_user }}@{{ hostvars[_param_ansible_host].ansible_host }} sudo ls {{ ansible_python_interpreter }}
  register: _result_python_present
  failed_when: _result_python_present is not defined
  changed_when: "_result_python_present.rc == 0"
  delegate_to: localhost

- name: If we couldn't find python interpreter try to install it using ssh and sudo
  block:

    - name: Provide informative message if python not present on remote host
      ansible.builtin.debug:
        msg: "KubeInit setup requires that {{ ansible_python_interpreter }} be installed on remote host {{ hostvars[_param_ansible_host].ansible_host }}, will attempt to install it remotely."

    - name: Fetch contents of /etc/os-release
      ansible.builtin.command: |
        ssh {{ hostvars[_param_ansible_host].ansible_ssh_common_args }} {{ kubeinit_facts_hostvars.remote_user }}@{{ hostvars[_param_ansible_host].ansible_host }} cat /etc/os-release
      register: _result_os_release
      changed_when: "_result_os_release.rc == 0"
      delegate_to: localhost

    - name: Run python install
      ansible.builtin.command: |
        ssh {{ hostvars[_param_ansible_host].ansible_ssh_common_args }} {{ kubeinit_facts_hostvars.remote_user }}@{{ hostvars[_param_ansible_host].ansible_host }} sudo {{ python_package_manager }} install -y {{ python_package }}
      register: _result_python_install
      changed_when: "_result_python_install.rc == 0"
      vars:
        python_package_manager: "{{ 'dnf' if (_result_os_release.stdout is match('.*[Cc][Ee][Nn][Tt][Oo][Ss].*')) else 'apt-get' }}"
        python_package: "{{ 'python39' if (_result_os_release.stdout is match('.*[Cc][Ee][Nn][Tt][Oo][Ss].*')) else 'python3' }}"
      delegate_to: localhost

    - name: Reconfirm that we can run ssh to _param_ansible_host, sudo without a password, and the python interpreter is present
      ansible.builtin.command: |
        ssh {{ hostvars[_param_ansible_host].ansible_ssh_common_args }} {{ kubeinit_facts_hostvars.remote_user }}@{{ hostvars[_param_ansible_host].ansible_host }} sudo ls {{ ansible_python_interpreter }}
      register: _result_python_present_recheck
      failed_when: _result_python_present_recheck is not defined
      changed_when: "_result_python_present_recheck.rc == 0"
      delegate_to: localhost

    - name: Provide informative message if python not present on remote host
      ansible.builtin.fail:
        msg: "KubeInit setup requires that {{ ansible_python_interpreter }} be installed on remote host {{ hostvars[_param_ansible_host].ansible_host }}"
      when: _result_python_present_recheck.stdout != ansible_python_interpreter

  when: _result_python_present.stdout != ansible_python_interpreter

- name: Confirm that we have ansible host connectivity
  ansible.builtin.ping:
  delegate_to: "{{ _param_ansible_host }}"
