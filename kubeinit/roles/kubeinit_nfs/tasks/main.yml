---
# Copyright 2020 KubeInit.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


# "kubeinit_nfs" will search for and load any operating system variable file

# found within the "vars/" path. If no OS files are found the task will skip.
- name: Gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
    - skip: true
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version.split('.')[0] }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
  tags:
    - always

- name: Install NFS packages
  package:
    name: "{{ kubeinit_nfs_packages }}"
    state: present


- name: "configure NFS shares of CentOS based guests"
  shell: |
    set -o pipefail
    systemctl enable nfs-server rpcbind
    systemctl start nfs-server rpcbind
    mkdir -p /var/nfsshare
    chmod -R 777 /var/nfsshare
    chown -R nobody:nobody /var/nfsshare
    echo '/var/nfsshare {{ kubeinit_inventory_network_net }}/{{ kubeinit_inventory_network_cidr }}(rw,sync,no_root_squash,no_all_squash,no_wdelay)' | tee /etc/exports
    setsebool -P nfs_export_all_rw 1
    systemctl restart nfs-server
  register: nfs_share_config
  changed_when: "nfs_share_config.rc == 0"
  when: kubeinit_inventory_cluster_distro == 'okd' or kubeinit_inventory_cluster_distro == 'k8s'
  args:
    executable: /bin/bash

- name: "configure NFS shares of Ubuntu based guests"
  shell: |
    set -o pipefail
    mkdir -p /var/nfsshare
    chmod -R 777 /var/nfsshare
    chown -R nobody:nogroup /var/nfsshare
    echo '/var/nfsshare {{ kubeinit_inventory_network_net }}/{{ kubeinit_inventory_network_cidr }}(rw,sync,no_root_squash,no_all_squash,no_wdelay)' | tee /etc/exports
    exportfs -a
    systemctl restart nfs-kernel-server
  register: nfs_share_config
  changed_when: "nfs_share_config.rc == 0"
  when: kubeinit_inventory_cluster_distro == 'rke' or kubeinit_inventory_cluster_distro == 'cdk'
  args:
    executable: /bin/bash
