---
# Copyright kubeinit contributors
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

################################################################
#                                                              #
# Submariner requires Docker for building the container images #
# Do not change docker by podman anywhere in this file         #
#                                                              #
################################################################

- name: Deploy broker/main cluster
  block:
    - name: Remove repo file
      ansible.builtin.shell: |
        set -o pipefail
        set -e
        rm -rf submariner-operator
      args:
        executable: /bin/bash
      register: remove_repo_existing
      changed_when: "remove_repo_existing.rc == 0"
      when: kubeinit_submariner_is_broker|bool and not kubeinit_submariner_deploy_stable|bool

    - name: Get submariner-operator repository content
      ansible.builtin.git:
        repo: https://github.com/submariner-io/submariner-operator
        dest: ~/submariner-operator
        force: yes
        version: devel
      when: kubeinit_submariner_is_broker|bool and not kubeinit_submariner_deploy_stable|bool

    - name: Get the PR ID
      ansible.builtin.shell: |
        set -o pipefail
        set -e
        echo "{{ kubeinit_submariner_test_pr_url }}" | rev | cut -d'/' -f 1 | rev
      args:
        executable: /bin/bash
      register: get_repo_pr_id
      changed_when: "get_repo_pr_id.rc == 0"
      when: kubeinit_submariner_is_broker|bool and not kubeinit_submariner_deploy_stable|bool

    - name: Configure a variable with the PR ID
      ansible.builtin.set_fact:
        kubeinit_submariner_test_pr_id: '{{ get_repo_pr_id.stdout }}'
      when: kubeinit_submariner_is_broker|bool and not kubeinit_submariner_deploy_stable|bool

    - name: Get submariner code based on a PR or from devel
      ansible.builtin.shell: |
        set -o pipefail
        set -e
        echo "Getting repo from: {{ kubeinit_submariner_test_pr_url }}"
        echo "Getting the ID: {{ kubeinit_submariner_test_pr_id }}"

        cd submariner-operator
        RE='^[0-9]+$'
        TEST_PR='{{ kubeinit_submariner_test_pr_id }}'

        if [[ $TEST_PR =~ $RE ]]; then
            echo "Testing PR: {{ kubeinit_submariner_test_pr_id }}"
            git fetch origin pull/{{ kubeinit_submariner_test_pr_id }}/head
            git checkout -b pr FETCH_HEAD
            git log -n 5 --pretty=oneline
        else
            echo "Running from devel"
        fi
      args:
        executable: /bin/bash
      register: get_submariner_operator_code
      changed_when: "get_submariner_operator_code.rc == 0"
      when: kubeinit_submariner_is_broker|bool and not kubeinit_submariner_deploy_stable|bool

    - name: Clean previous images
      ansible.builtin.shell: |
        set -o pipefail
        set -e

        # We use docker in the RKE cluster
        # Do not change this by podman
        # Remove the previously created images
        docker system prune -af;
      args:
        executable: /bin/bash
      register: clean_all_local_images
      changed_when: "clean_all_local_images.rc == 0"
      when: kubeinit_submariner_is_broker|bool and not kubeinit_submariner_deploy_stable|bool

    - name: Make clean
      community.general.make:
        chdir: ~/submariner-operator
        target: clean
      when: kubeinit_submariner_is_broker|bool and not kubeinit_submariner_deploy_stable|bool

    - name: Make the subctl binary
      community.general.make:
        chdir: ~/submariner-operator
        target: bin/subctl
      when: kubeinit_submariner_is_broker|bool and not kubeinit_submariner_deploy_stable|bool

    - name: Make build
      community.general.make:
        chdir: ~/submariner-operator
        target: build
      when: kubeinit_submariner_is_broker|bool and not kubeinit_submariner_deploy_stable|bool

    - name: Make images
      community.general.make:
        chdir: ~/submariner-operator
        target: images
      when: kubeinit_submariner_is_broker|bool and not kubeinit_submariner_deploy_stable|bool

    - name: Push the images to the local registry
      ansible.builtin.shell: |
        set -o pipefail
        set -e
        LOCAL_REGISTRY=$(cat ~/registry-auths.json | jq .auths | jq -r 'keys[]')
        cp registry-auths.json ~/config.json
        cat ~/config.json
        docker --config ~/ tag quay.io/submariner/submariner-operator:devel $LOCAL_REGISTRY/submariner/submariner-operator:devel;
        # --config will search the config.json in ~/
        docker --config ~/ push $LOCAL_REGISTRY/submariner/submariner-operator:devel;
      args:
        executable: /bin/bash
      register: push_submariner_to_local_registry
      changed_when: "push_submariner_to_local_registry.rc == 0"
      when: kubeinit_submariner_is_broker|bool and not kubeinit_submariner_deploy_stable|bool

    - name: Make the subctl binary available
      ansible.builtin.shell: |
        set -o pipefail
        set -e

        mkdir -p ~/.local/bin/
        rm -rf ~/.local/bin/subctl
        cp ~/submariner-operator/bin/subctl ~/.local/bin/
      args:
        executable: /bin/bash
      register: install_subctl
      changed_when: "install_subctl.rc == 0"
      when: kubeinit_submariner_is_broker|bool and not kubeinit_submariner_deploy_stable|bool

    - name: Make the subctl binary available from a stable release
      ansible.builtin.shell: |
        set -o pipefail
        set -e

        curl -Ls https://get.submariner.io | VERSION={{ kubeinit_submariner_deploy_version }} bash
      args:
        executable: /bin/bash
      register: install_subctl
      changed_when: "install_subctl.rc == 0"
      when: kubeinit_submariner_is_broker|bool and kubeinit_submariner_deploy_stable|bool

    - name: Check if profile exists
      ansible.builtin.stat:
        path: ~/.profile
      register: profile_exists

    - name: Append subctl path to profile
      ansible.builtin.lineinfile:
        line: export PATH=$PATH:~/.local/bin
        dest: ~/.profile
      when: profile_exists.stat.exists and kubeinit_submariner_is_broker|bool

    - name: Check if bash_profile exists
      ansible.builtin.stat:
        path: ~/.bash_profile
      register: bash_profile_exists

    - name: Append subctl path to bash_profile
      ansible.builtin.lineinfile:
        line: export PATH=$PATH:~/.local/bin
        dest: ~/.bash_profile
      when: bash_profile_exists.stat.exists and kubeinit_submariner_is_broker|bool

    - name: Check if bashrc exists
      ansible.builtin.stat:
        path: ~/.bashrc
      register: bashrc_exists

    - name: Append subctl path to bashrc
      ansible.builtin.lineinfile:
        line: export PATH=$PATH:~/.local/bin
        dest: ~/.bashrc
      when: bashrc_exists.stat.exists and kubeinit_submariner_is_broker|bool

    - name: Configure broker cluster
      ansible.builtin.shell: |
        set -e
        export PATH=$PATH:~/.local/bin

        touch ~/broker-info.subm;
        subctl deploy-broker \
            --kubeconfig ~/.kube/config \
            --service-discovery {% if kubeinit_submariner_globalnet_enabled %} --globalnet --globalnet-cidr-range {{ kubeinit_submariner_globalnet_cidr_range }} {% endif %}
      args:
        executable: /bin/bash
      register: install_subctl
      changed_when: "install_subctl.rc == 0"
      when: kubeinit_submariner_is_broker|bool

    - name: Get the service cidr
      ansible.builtin.shell: |
        set -e
        cat ~/service_cidr
      args:
        executable: /bin/bash
      register: submariner_service_cidr
      changed_when: "submariner_service_cidr.rc == 0"
      when: kubeinit_submariner_is_broker|bool

    - name: Set the cidr variable
      ansible.builtin.set_fact:
        kubeinit_submariner_service_cidr: "{{ submariner_service_cidr.stdout }}"
      when: kubeinit_submariner_is_broker|bool

    - name: Join the main cluster to the broker overriding the images registry
      ansible.builtin.shell: |
        set -o pipefail
        set -e

        export PATH=$PATH:~/.local/bin
        LOCAL_REGISTRY=$(cat ~/registry-auths.json | jq .auths | jq -r 'keys[]')
        subctl join \
            --kubeconfig ~/.kube/config ./broker-info.subm \
            --servicecidr {{ kubeinit_submariner_service_cidr }} \
            --label-gateway=false \
            --natt=false \
            --pod-debug \
            --cable-driver libreswan \
            --clusterid {{ kubeinit_cluster_name }} \
            --image-override="submariner-operator=$LOCAL_REGISTRY/submariner/submariner-operator:devel"
      args:
        executable: /bin/bash
      register: join_cluster
      changed_when: "join_cluster.rc == 0"
      when: kubeinit_submariner_is_broker|bool and not kubeinit_submariner_deploy_stable|bool

    - name: Join the main cluster to the broker pulling from the default registry
      ansible.builtin.shell: |
        set -o pipefail
        set -e

        export PATH=$PATH:~/.local/bin
        subctl join \
            --kubeconfig ~/.kube/config ./broker-info.subm \
            --servicecidr {{ kubeinit_submariner_service_cidr }} \
            --label-gateway=false \
            --natt=false \
            --pod-debug \
            --cable-driver libreswan \
            --clusterid {{ kubeinit_cluster_name }}
      args:
        executable: /bin/bash
      register: join_cluster
      changed_when: "join_cluster.rc == 0"
      when: kubeinit_submariner_is_broker|bool and kubeinit_submariner_deploy_stable|bool

    - name: Export the submariner images and the binary files
      ansible.builtin.shell: |
        set -o pipefail
        set -e
        # Backup the images
        IDS=$(docker images | awk '{if ($1 ~ /^(submariner|quay)/) print $1}')
        docker save $IDS -o /tmp/submariner_images.tar

        # Backup the binary files
        cp ~/submariner-operator/bin/subctl ~/subctl
        tar -cvf /tmp/submariner_binaries.tar ~/subctl
      args:
        executable: /bin/bash
      register: backup_subm_images_binaries
      changed_when: "backup_subm_images_binaries.rc == 0"
      when: kubeinit_submariner_is_broker|bool and not kubeinit_submariner_deploy_stable|bool

    - name: Copy the images and binaries to the hypervisor
      ansible.builtin.shell: |
        set -e
        scp -i ~/.ssh/{{ kubeinit_cluster_name }}_id_{{ kubeinit_common_ssh_keytype }} -oStrictHostKeyChecking=no root@{{ hostvars[ groups['all_service_nodes'] | list | first ].ansible_host }}:/tmp/submariner_binaries.tar /root/submariner_binaries.tar
        scp -i ~/.ssh/{{ kubeinit_cluster_name }}_id_{{ kubeinit_common_ssh_keytype }} -oStrictHostKeyChecking=no root@{{ hostvars[ groups['all_service_nodes'] | list | first ].ansible_host }}:/tmp/submariner_images.tar /root/submariner_images.tar
      args:
        executable: /bin/bash
      register: kubeinit_submariner_get_images_and_binaries_from_broker
      changed_when: "kubeinit_submariner_get_images_and_binaries_from_broker.rc == 0"
      delegate_to: "hypervisor-01"
      when: kubeinit_submariner_is_broker|bool and not kubeinit_submariner_deploy_stable|bool

    - name: Copy the broker-info.subm to the hypervisor
      ansible.builtin.shell: |
        set -e
        scp -i ~/.ssh/{{ kubeinit_cluster_name }}_id_{{ kubeinit_common_ssh_keytype }} -oStrictHostKeyChecking=no root@{{ hostvars[ groups['all_service_nodes'] | list | first ].ansible_host }}:/root/broker-info.subm /root/broker-info.subm
      args:
        executable: /bin/bash
      register: kubeinit_submariner_get_files_from_broker
      changed_when: "kubeinit_submariner_get_files_from_broker.rc == 0"
      delegate_to: "hypervisor-01"
      when: kubeinit_submariner_is_broker|bool

    - name: Copy the kubeconfig to the hypervisor
      ansible.builtin.shell: |
        set -e
        scp -i ~/.ssh/{{ kubeinit_cluster_name }}_id_{{ kubeinit_common_ssh_keytype }} -oStrictHostKeyChecking=no root@{{ hostvars[ groups['all_service_nodes'] | list | first ].ansible_host }}:~/.kube/config /root/kubeconfig_{{ kubeinit_cluster_name }}
      args:
        executable: /bin/bash
      register: kubeinit_submariner_get_files_from_broker
      changed_when: "kubeinit_submariner_get_files_from_broker.rc == 0"
      delegate_to: "hypervisor-01"
      when: kubeinit_submariner_is_broker|bool

    - name: Tag the worker nodes
      ansible.builtin.shell: |
        for node in $(KUBECONFIG=~/.kube/config kubectl get nodes -l node-role.kubernetes.io/worker=true -o name | cut -d'/' -f 2);
        do
            KUBECONFIG=~/.kube/config kubectl label node ${node} submariner.io/gateway=true --overwrite
            KUBECONFIG=~/.kube/config kubectl label node ${node} gateway.submariner.io/natt-discovery-port=4490 --overwrite
        done
      args:
        executable: /bin/bash
      register: tag_worker_broker
      changed_when: "tag_worker_broker.rc == 0"
      when: kubeinit_submariner_is_broker|bool
