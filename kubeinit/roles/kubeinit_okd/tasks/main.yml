---
# Copyright kubeinit.com
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Run validations
  ansible.builtin.include_role:
    name: "../../roles/kubeinit_validations"
    tasks_from: 70_libvirt.yml
    public: yes
  tags: provision_libvirt

- name: provision the initial virtual infra
  ansible.builtin.include_role:
   name: "../../roles/kubeinit_libvirt"
   tasks_from: main.yml
   public: yes
  tags: provision_libvirt
  # We prepare all the available hypervisors
  with_items:
    - "{{ groups['all'] | map('regex_search','^.*(hypervisor).*$') | select('string') | list }}"
  loop_control:
    loop_var: cluster_role_item
  vars:
    kubeinit_deployment_node_name: "{{ cluster_role_item }}"

- name: post configure steps for OVN
  ansible.builtin.include_role:
   name: "../../roles/kubeinit_libvirt"
   tasks_from: 00_ovn_post_setup.yml
   public: yes
  with_items:
    - "{{ groups['all'] | map('regex_search','^.*(hypervisor).*$') | select('string') | list }}"
  loop_control:
    loop_var: cluster_role_item
  when: kubeinit_libvirt_ovn_enabled
  vars:
    kubeinit_deployment_node_name: "{{ cluster_role_item }}"
  tags: provision_libvirt

- name: Deploy the cluster service node
  ansible.builtin.include_role:
    name: "../../roles/kubeinit_libvirt"
    tasks_from: 10_okd_deploy_nodes.yml
    public: yes
  with_items:
    - "{{ groups['all'] | map('regex_search','^.*(service).*$') | select('string') | list }}"
  loop_control:
    loop_var: cluster_role_item
  vars:
    kubeinit_deployment_node_name: "{{ cluster_role_item }}"
    kubeinit_deployment_role: service
  tags: provision_libvirt

- name: Check that the service node is up and running
  ansible.builtin.include_role:
    name: "../../roles/kubeinit_libvirt"
    tasks_from: 20_check_nodes_up.yml
    public: yes
  with_items:
    - "{{ groups['all'] | map('regex_search','^.*(service).*$') | select('string') | list }}"
  loop_control:
    loop_var: cluster_role_item
  vars:
    kubeinit_deployment_node_name: "{{ cluster_role_item }}"
  tags: provision_libvirt

- name: Upgrade packages and restart
  ansible.builtin.include_role:
    name: "../../roles/kubeinit_okd"
    tasks_from: 00_bounce_packages.yml
    public: yes
  with_items:
    - "{{ groups['all'] | map('regex_search','^.*(service).*$') | select('string') | list }}"
  loop_control:
    loop_var: cluster_role_item
  vars:
    kubeinit_deployment_node_name: "{{ cluster_role_item }}"
  tags: provision_libvirt

- name: Check that the service node is up and running
  ansible.builtin.include_role:
    name: "../../roles/kubeinit_libvirt"
    tasks_from: 20_check_nodes_up.yml
    public: yes
  with_items:
    - "{{ groups['all'] | map('regex_search','^.*(service).*$') | select('string') | list }}"
  loop_control:
    loop_var: cluster_role_item
  vars:
    kubeinit_deployment_node_name: "{{ cluster_role_item }}"
  tags: provision_libvirt

- name: Configure the cluster service node
  ansible.builtin.include_role:
    name: "../../roles/kubeinit_okd"
    tasks_from: 10_configure_service_nodes.yml
    public: yes
  with_items:
    - "{{ groups['all'] | map('regex_search','^.*(service).*$') | select('string') | list }}"
  loop_control:
    loop_var: cluster_role_item
  vars:
    kubeinit_deployment_node_name: "{{ cluster_role_item }}"
  tags: provision_libvirt

- name: Deploy the cluster bootstrap nodes
  ansible.builtin.include_role:
    name: "../../roles/kubeinit_libvirt"
    tasks_from: 10_okd_deploy_nodes.yml
    public: yes
  with_items:
    - "{{ groups['all'] | map('regex_search','^.*(bootstrap).*$') | select('string') | list }}"
  loop_control:
    loop_var: cluster_role_item
  vars:
    kubeinit_deployment_node_name: "{{ cluster_role_item }}"
    kubeinit_deployment_role: bootstrap
  tags: provision_libvirt

- name: Wait for the bootstrap node to complete
  ansible.builtin.include_role:
    name: "../../roles/kubeinit_okd"
    tasks_from: 25_wait_bootstrap_complete.yml
    public: yes
  with_items:
    - "{{ groups['all'] | map('regex_search','^.*(service).*$') | select('string') | list }}"
  loop_control:
    loop_var: cluster_role_item
  vars:
    kubeinit_deployment_node_name: "{{ cluster_role_item }}"
    kubeinit_deployment_role: bootstrap
  tags: provision_libvirt

- name: Deploy the cluster master nodes
  ansible.builtin.include_role:
    name: "../../roles/kubeinit_libvirt"
    tasks_from: 10_okd_deploy_nodes.yml
    public: yes
  with_items:
    - "{{ groups['all'] | map('regex_search','^.*(master).*$') | select('string') | list }}"
  loop_control:
    loop_var: cluster_role_item
  vars:
    kubeinit_deployment_node_name: "{{ cluster_role_item }}"
    kubeinit_deployment_role: master
  tags: provision_libvirt

- name: Configure the cluster master nodes
  ansible.builtin.include_role:
    name: "../../roles/kubeinit_okd"
    tasks_from: 20_check_nodes_ready.yml
    public: yes
  # We always delegate this to the service node and
  # check the deployment_role variable
  with_items:
    - "{{ groups['all'] | map('regex_search','^.*(service).*$') | select('string') | list }}"
  loop_control:
    loop_var: cluster_role_item
  vars:
    kubeinit_deployment_node_name: "{{ cluster_role_item }}"
    kubeinit_deployment_role: master
  tags: provision_libvirt

- name: Deploy the cluster worker nodes
  ansible.builtin.include_role:
    name: "../../roles/kubeinit_libvirt"
    tasks_from: 10_okd_deploy_nodes.yml
    public: yes
  with_items:
    - "{{ groups['all'] | map('regex_search','^.*(worker).*$') | select('string') | list }}"
  loop_control:
    loop_var: cluster_role_item
  vars:
    kubeinit_deployment_node_name: "{{ cluster_role_item }}"
    kubeinit_deployment_role: worker
  tags: provision_libvirt

- name: Finish post deployment tasks
  ansible.builtin.include_role:
    name: "../../roles/kubeinit_okd"
    tasks_from: 30_post_deployment_tasks.yml
    public: yes
  with_items:
    - "{{ groups['all'] | map('regex_search','^.*(service).*$') | select('string') | list }}"
  loop_control:
    loop_var: cluster_role_item
  vars:
    kubeinit_deployment_node_name: "{{ cluster_role_item }}"
  tags: provision_libvirt

- name: Deploy KubeVirt
  ansible.builtin.include_role:
    name: "../../roles/kubeinit_kubevirt"
    tasks_from: main.yml
    public: yes
  tags: kubeinit_kubevirt
