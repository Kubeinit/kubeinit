---
# Copyright kubeinit contributors
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

##
## OVN packages setup in the Hypervisors.
##

#
# We install all OVN requirements in the first hypervisor
#
- name: Install OVN packages in CentOS/RHEL (Master Hypervisor)
  ansible.builtin.shell: |
    # http://mirror.centos.org/centos/8/nfv/x86_64/openvswitch-2/Packages/o/
    dnf install -y centos-release-nfv-openvswitch
    REQ_PACKAGES="openvswitch2.13 \
                  ovn2.13 \
                  ovn2.13-central \
                  ovn2.13-host"
    dnf install -y ${REQ_PACKAGES}
    dnf reinstall -y ${REQ_PACKAGES}
  when: >
    (kubeinit_deployment_node_name in kubeinit_ovn_central_host) and
    (hostvars[kubeinit_deployment_node_name].distribution_family == 'CentOS')
  args:
    executable: /bin/bash
  register: ovn_install
  changed_when: "ovn_install.rc == 0"

- name: Install OVN packages in Fedora (Master Hypervisor)
  ansible.builtin.shell: |
    REQ_PACKAGES="openvswitch \
                  ovn \
                  ovn-central \
                  ovn-host"
    dnf install -y ${REQ_PACKAGES}
    dnf reinstall -y ${REQ_PACKAGES}
  when: >
    (kubeinit_deployment_node_name in kubeinit_ovn_central_host) and
    (hostvars[kubeinit_deployment_node_name].distribution_family == 'Fedora')
  args:
    executable: /bin/bash
  register: ovn_install
  changed_when: "ovn_install.rc == 0"

- name: Install OVN packages in Ubuntu/Debian (Master Hypervisor)
  ansible.builtin.shell: |
    apt-get install --reinstall -y openvswitch-common \
                                   openvswitch-switch \
                                   ovn-common \
                                   ovn-host \
                                   ovn-central
  when: >
    (kubeinit_deployment_node_name in kubeinit_ovn_central_host) and
    (hostvars[kubeinit_deployment_node_name].distribution_family == 'Debian')
  args:
    executable: /bin/bash
  register: ovn_install
  changed_when: "ovn_install.rc == 0"

#
# We DO NOT install ovn-central (OVN requirement) in the other hypervisors
#
- name: Install OVN packages in CentOS/RHEL (Slave Hypervisor)
  ansible.builtin.shell: |
    # http://mirror.centos.org/centos/8/nfv/x86_64/openvswitch-2/Packages/o/
    dnf install -y centos-release-nfv-openvswitch
    REQ_PACKAGES="openvswitch2.13 \
                  ovn2.13 \
                  ovn2.13-host"
    dnf install -y ${REQ_PACKAGES}
    dnf reinstall -y ${REQ_PACKAGES}
  when: >
    (kubeinit_deployment_node_name not in kubeinit_ovn_central_host) and
    (hostvars[kubeinit_deployment_node_name].distribution_family == 'CentOS')
  args:
    executable: /bin/bash
  register: ovn_install_slaves
  changed_when: "ovn_install_slaves.rc == 0"

- name: Install OVN packages in Fedora (Slave Hypervisor)
  ansible.builtin.shell: |
    REQ_PACKAGES="openvswitch \
                  ovn \
                  ovn-host"
    dnf install -y ${REQ_PACKAGES}
    dnf reinstall -y ${REQ_PACKAGES}
  when: >
    (kubeinit_deployment_node_name not in kubeinit_ovn_central_host) and
    (hostvars[kubeinit_deployment_node_name].distribution_family == 'Fedora')
  args:
    executable: /bin/bash
  register: ovn_install_slaves
  changed_when: "ovn_install_slaves.rc == 0"

- name: Install OVN packages in Ubuntu/Debian (Slave Hypervisor)
  ansible.builtin.shell: |
    apt-get install --reinstall -y openvswitch-common \
                                   openvswitch-switch \
                                   ovn-common \
                                   ovn-host
  when: >
    (kubeinit_deployment_node_name not in kubeinit_ovn_central_host) and
    (hostvars[kubeinit_deployment_node_name].distribution_family == 'Debian')
  args:
    executable: /bin/bash
  register: ovn_install_slaves
  changed_when: "ovn_install_slaves.rc == 0"

- name: Refresh firewalld services list to pick up ovn services
  ansible.builtin.shell: |
    firewall-cmd --reload
  args:
    executable: /bin/bash
  register: refresh_firewalld
  changed_when: "refresh_firewalld.rc == 0"

- name: Enable OVN central in firewalld
  ansible.posix.firewalld:
    service: ovn-central-firewall-service
    permanent: true
    state: enabled
    immediate: true
  when: >
    (kubeinit_deployment_node_name in kubeinit_ovn_central_host)

- name: Enable OVN NAT in firewalld
  ansible.posix.firewalld:
    rich_rule: "rule family=ipv4 source address={{ kubeinit_inventory_network_net }}/{{ kubeinit_inventory_network_cidr }} masquerade"
    permanent: true
    state: enabled
    immediate: true
  when: >
    (kubeinit_deployment_node_name in kubeinit_ovn_central_host)

- name: Enable OVN host in firewalld
  ansible.posix.firewalld:
    service: ovn-host-firewall-service
    permanent: true
    state: enabled
    immediate: true

- name: Refresh firewalld services list
  ansible.builtin.shell: |
    firewall-cmd --reload
  args:
    executable: /bin/bash
  register: refresh_firewalld_s
  changed_when: "refresh_firewalld_s.rc == 0"

- name: Enable and start OVN services in the first hypervisor (CentOS based)
  ansible.builtin.service:
    name: "{{ item }}"
    state: restarted
    enabled: yes
  loop:
    - openvswitch
    - ovn-northd
    - ovn-controller
  when: >
    (kubeinit_deployment_node_name in kubeinit_ovn_central_host) and
    (hostvars[kubeinit_deployment_node_name].distribution_family != 'Debian')

- name: Enable and start OVN services in the rest of the hypervisors (CentOS based)
  ansible.builtin.service:
    name: "{{ item }}"
    state: restarted
    enabled: yes
  loop:
    - openvswitch
    - ovn-controller
  when: >
    (kubeinit_deployment_node_name not in kubeinit_ovn_central_host) and
    (hostvars[kubeinit_deployment_node_name].distribution_family != 'Debian')

- name: Enable and start OVN services in the first hypervisor (Ubuntu based)
  ansible.builtin.service:
    name: "{{ item }}"
    state: restarted
    enabled: yes
  loop:
    - ovs-vswitchd
    - ovn-central
    - ovn-controller
  when: >
    (kubeinit_deployment_node_name in kubeinit_ovn_central_host) and
    (hostvars[kubeinit_deployment_node_name].distribution_family == 'Debian')

- name: Enable and start OVN services in the rest of the hypervisors (Ubuntu based)
  ansible.builtin.service:
    name: "{{ item }}"
    state: restarted
    enabled: yes
  loop:
    - ovs-vswitchd
    - ovn-controller
  when: >
    (kubeinit_deployment_node_name not in kubeinit_ovn_central_host) and
    (hostvars[kubeinit_deployment_node_name].distribution_family == 'Debian')
