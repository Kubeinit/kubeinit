---

###
#
# The default name we will use for the network
#
default_network_name: kimgtnet0

#
# Configuration used to build cluster groups
#

###
# Controller, compute, and extra nodes can be configured as virtual machines or using the
# manually provisioned baremetal machines for the deployment.  Additional
# specifications provided on the command line can be used to override
# any of these defaults, e.g.
#   -e extra_nodes_spec='[[name=nova-compute,when_distro=okd,os=centos]]'
default_extra_nodes_map_list:
- name: juju-controller
  when_distro:
  - cdk
- name: bootstrap
  when_distro:
  - ocp
  - okd

###
# Service nodes are a set of service containers sharing the same pod network.
# There is an implicit 'provision' service container which will use a base os
# container image based upon the service_nodes:vars os attribute.
default_service_nodes_map_list:
- name: service
  services: "bind,dnsmasq,haproxy,apache,registry,apps"  # nexus

###
# Default values for cluster node configuration.
#
cluster_node_configurations_docsplaceholder: 'we should have a cluster_node_configuration main key'

cdk_cluster_node_os: ubuntu
eks_cluster_node_os: centos
k8s_cluster_node_os: centos
kid_cluster_node_os: debian
openshift_cluster_node_os: coreos
openshift_service_node_os: centos
rke_cluster_node_os: ubuntu

cluster_node_vcpus: 8
cluster_node_maxvcpus: 16

controller_node_disk_size: 25G
controller_node_ram_size: 25165824
compute_node_disk_size: 30G
compute_node_ram_size: 8388608
extra_node_disk_size: 20G
extra_node_ram_size: 16777216

juju_controller_node_ram_size: 8388608
bootstrap_node_ram_size: 16777216

controller_node_target_order:
- hypervisor-01
compute_node_target_order:
- hypervisor-02
- hypervisor-01
extra_node_target_order:
- hypervisor-02
- hypervisor-01
service_node_target_order:
- hypervisor-01

###
# The following list of maps will be used to build the inventory
# of cluster nodes needed by the kubeinit_spec.  Additional
# specifications provided on the command line can be used to override
# any of these defaults, e.g.
#   -e cluster_nodes_spec='[[when_group=controller_nodes,disk=35G]]'
default_cluster_nodes_map_list:
- when_distro:
  - cdk
  os: "{{ cdk_cluster_node_os }}"
- when_distro:
  - eks
  os: "{{ eks_cluster_node_os }}"
- when_distro:
  - k8s
  os: "{{ k8s_cluster_node_os }}"
- when_distro:
  - kid
  os: "{{ kid_cluster_node_os }}"
- when_distro:
  - ocp
  - okd
  os: "{{ openshift_cluster_node_os }}"
- when_distro:
  - ocp
  - okd
  when_group: service_nodes
  os: "{{ openshift_service_node_os }}"
- when_distro:
  - rke
  os: "{{ rke_cluster_node_os }}"
- when_type: virtual
  vcpus: "{{ cluster_node_vcpus }}"
  maxvcpus: "{{ cluster_node_maxvcpus }}"
- when_group: controller_nodes
  disk: "{{ controller_node_disk_size }}"
  ram: "{{ controller_node_ram_size }}"
  target_order: "{{ controller_node_target_order }}"
- when_group: compute_nodes
  disk: "{{ compute_node_disk_size }}"
  ram: "{{ compute_node_ram_size }}"
  target_order: "{{ compute_node_target_order }}"
- when_group: extra_nodes
  disk: "{{ extra_node_disk_size }}"
  target_order: "{{ extra_node_target_order }}"
- when_group: extra_nodes
  ram: "{{ extra_node_ram_size }}"
- when_group: extra_nodes
  when_distro:
  - cdk
  ram: "{{ juju_controller_node_ram_size }}"
- when_group: extra_nodes
  when_distro:
  - ocp
  - okd
  ram: "{{ bootstrap_node_ram_size }}"
- when_group: service_nodes
  target_order: "{{ service_node_target_order }}"
