---

###
#
# The default name we will use for the network
#
default_network_name: kimgtnet0

#
# Configuration used to build cluster groups
#

###
# Default values for cluster node configuration.
#
cluster_node_configurations_docsplaceholder: 'we should have a cluster_node_configuration main key'

cluster_node_distro:
  cdk:
    os: ubuntu
  eks:
    os: centos
  k8s:
    os: centos
  kid:
    os: debian
  ocp:
    os: coreos
  okd:
    os: coreos
  rke:
    os: ubuntu

cluster_node_os: "{{ hostvars['kubeinit-defaults'].cluster_node_distro[kubeinit_cluster_distro].os }}"

cluster_node_vcpus: 8
cluster_node_maxvcpus: 16

controller_node_disk_size: 25G
controller_node_ram_size: 25165824
compute_node_disk_size: 30G
compute_node_ram_size: 8388608

###
# The nodes target order will determine the place to host the guest VMs.
# in the case there is no target available for the guest VMs it means they
# will be deployed on an existing cloud.
# The services node target in the case of a libvirt deployment is a Pod in
# the HV, in the case the deployment is in a cloud it will be a guest VM.
#
service_node_target_order:
- hypervisor-01
controller_node_target_order:
- hypervisor-01
compute_node_target_order:
- hypervisor-02
- hypervisor-01

###
# The following list of maps will be used to build the inventory
# of cluster nodes needed by the kubeinit_spec.  Additional
# specifications provided on the command line can be used to override
# any of these defaults, e.g.
#
#   -e cluster_nodes_spec='[{"when_group":"controller_nodes","disk"="35G"}]'
#
default_cluster_nodes_map_list:
- os: "{{ hostvars['kubeinit-defaults'].cluster_node_os }}"
- when_type: virtual
  vcpus: "{{ cluster_node_vcpus }}"
  maxvcpus: "{{ cluster_node_maxvcpus }}"
- when_group: controller_nodes
  disk: "{{ controller_node_disk_size }}"
  ram: "{{ controller_node_ram_size }}"
  target_order: "{{ controller_node_target_order }}"
- when_group: compute_nodes
  disk: "{{ compute_node_disk_size }}"
  ram: "{{ compute_node_ram_size }}"
  target_order: "{{ compute_node_target_order }}"
- when_group: service_nodes
  disk: "{{ service_node_disk_size }}"
  ram: "{{ service_node_ram_size }}"
  target_order: "{{ service_node_target_order }}"

###
# Service nodes can be configured as virtual machines or using the
# manually provisioned baremetal machines for the deployment.
#

service_node_vcpus: 8
service_node_maxvcpus: 16
service_node_disk_size: 20G
service_node_ram_size: 16777216

###
# Extra nodes can be configured as virtual machines or using the
# manually provisioned baremetal machines for the deployment.
#

extra_node_vcpus: 8
extra_node_maxvcpus: 16
extra_node_disk_size: 20G
extra_node_ram_size: 16777216

juju_controller_node_ram_size: 8388608

extra_node_target_order:
- hypervisor-02
- hypervisor-01

###
# Additional specifications provided on the command line can be used to
# override any of these defaults, e.g.
#
#   -e extra_nodes_spec='[{"name":"nova-compute","when_distro":["okd"],"os":"centos"}]'
#
default_extra_nodes_map_list:
- os: "{{ hostvars['kubeinit-defaults'].cluster_node_os }}"
- when_type: virtual
  vcpus: "{{ cluster_node_vcpus }}"
  maxvcpus: "{{ cluster_node_maxvcpus }}"
- disk: "{{ extra_node_disk_size }}"
  ram: "{{ extra_node_ram_size }}"
  target_order: "{{ extra_node_target_order }}"
- when_distro:
  - cdk
  name: juju-controller
  ram: "{{ juju_controller_node_ram_size }}"
- when_distro:
  - ocp
  - okd
  name: bootstrap

###
# Service nodes are a set of service containers sharing the same pod network.
# There is an implicit 'provision' service container which will use a base os
# container image based upon the service_nodes:vars os attribute.
#

openshift_service_node_os: centos

###
# Additional specifications provided on the command line can be used to override
# any of these defaults, e.g.
#
#   -e service_nodes_spec='[{"services":["apache","bind","dnsmasq"]}]'
#
default_service_nodes_map_list:
- os: "{{ hostvars['kubeinit-defaults'].cluster_node_os }}"
  services:
  - bind
  - dnsmasq
  - haproxy
  - apache
  - registry
  - apps
  # - nexus
  target_order: "{{ service_node_target_order }}"
- when_distro:
  - ocp
  - okd
  os: "{{ openshift_service_node_os }}"
- name: service
- when_type: virtual
  vcpus: "{{ service_node_vcpus }}"
  maxvcpus: "{{ service_node_maxvcpus }}"
  disk: "{{ service_node_disk_size }}"
  ram: "{{ service_node_ram_size }}"
  target_order: "{{ service_node_target_order }}"
