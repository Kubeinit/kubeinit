---
name: distro_test
on:
  push:
    paths-ignore:
      - 'docs/**'
  pull_request:
  # Run the functional tests every 8 hours.
  # This will help to identify faster if
  # there is a CI failure related to a
  # change in any dependency.
  schedule:
    - cron: '0 */8 * * *'
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt update -y
        sudo apt install jq -y
        sudo apt-get remove ansible -y
        sudo python3 -m pip uninstall ansible
        sudo python3 -m pip install ansible==3.4.0
        sudo locale-gen en_US.UTF-8
        sudo dpkg-reconfigure locales
        sudo apt install build-essential findutils -y
        sudo apt-get --purge autoremove python3-pip
        sudo apt install python3-pip
        sudo python3 -m pip install --upgrade pip
        sudo python3 -m pip install --upgrade virtualenv
        sudo python3 -m pip install --upgrade setuptools
        sudo python3 -m pip install -r ./test-requirements.txt
    - name: Prepare connection to nyctea
      run: |
        iface_ip=$(hostname -i)
        sudo echo "${iface_ip} nyctea.local nyctea" | sudo tee -a /etc/hosts
    - name: Check SSH config
      run: |
        cat > sshd_config <<EOF
          SyslogFacility AUTHPRIV
          PermitRootLogin yes
          AuthorizedKeysFile	.ssh/authorized_keys
          PasswordAuthentication yes
          ChallengeResponseAuthentication no
          UsePAM yes
          UseDNS no
          X11Forwarding no
          PrintMotd no
        EOF
        sudo mv sshd_config /etc/ssh/sshd_config
        sudo systemctl restart ssh
    - name: Create ssh key and enable passwordless access
      run: >
        sudo su <<EOF
            ssh-keygen -t rsa -b 4096 -N '' -f ~/.ssh/id_rsa
            cat ~/.ssh/id_rsa.pub | tee -a ~/.ssh/authorized_keys
            chmod 600 ~/.ssh/authorized_keys
            chmod 700 ~/.ssh
            sudo chmod -c 0755 ~/
            ls -la ~/.ssh
            # echo "Test to nyctea"
            # ssh -i ~/.ssh/id_rsa -o BatchMode=yes -o StrictHostKeyChecking=no $(whoami)@nyctea
            # echo "Test to localhost"
            # ssh -i ~/.ssh/id_rsa -o BatchMode=yes -o StrictHostKeyChecking=no $(whoami)@localhost
        EOF
    - name: Adjust CDK inventory
      run: |
        sed -i -E "s/.*controller-02/#controller-02/g" ./hosts/cdk/inventory
        sed -i -E "s/.*controller-03/#controller-03/g" ./hosts/cdk/inventory
        sed -i -E "s/.*compute-01/#compute-01/g" ./hosts/cdk/inventory
        sed -i -E "s/.*compute-02/#compute-02/g" ./hosts/cdk/inventory
        sed -i -E "/cdk-service-01 ansible_host/ s/type=virtual/type=container/g" ./hosts/cdk/inventory
        sed -i '/^\[controller_nodes:vars\]$/,/^\[/ s/^disk=25G/disk=10G/' ./hosts/cdk/inventory
        sed -i '/^\[controller_nodes:vars\]$/,/^\[/ s/^ram=25165824/ram=3165824/' ./hosts/cdk/inventory
        sed -i '/^\[controller_nodes:vars\]$/,/^\[/ s/^vcpus=8/vcpus=1/' ./hosts/cdk/inventory
        sed -i '/^\[service_nodes:vars\]$/,/^\[/ s/^disk=150G/disk=10G/' ./hosts/cdk/inventory
        sed -i '/^\[service_nodes:vars\]$/,/^\[/ s/^ram=12582912/ram=3165824/' ./hosts/cdk/inventory
        sed -i '/^\[service_nodes:vars\]$/,/^\[/ s/^vcpus=8/vcpus=1/' ./hosts/cdk/inventory
        sed -i '/^\[extra_nodes:vars\]$/,/^\[/ s/^disk=20G/disk=5G/' ./hosts/cdk/inventory
        sed -i '/^\[extra_nodes:vars\]$/,/^\[/ s/^ram=8388608/ram=3165824/' ./hosts/cdk/inventory
        sed -i '/^\[extra_nodes:vars\]$/,/^\[/ s/^vcpus=8/vcpus=1/' ./hosts/cdk/inventory
    - name: Run the deployment for a container
      run: |
        sudo su <<EOF
            whoami
            podman build -t kubeinit/kubeinit .
            podman run --rm -it \
                -v ~/.ssh/id_rsa:/root/.ssh/id_rsa:z \
                -v ~/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub:z \
                -v /etc/hosts:/etc/hosts \
                kubeinit/kubeinit \
                    -v \
                    -e ansible_ssh_user=root \
                    -e kubeinit_stop_after_task='task-run-validations' \
                    -e kubeinit_libvirt_create_cloud_user=true \
                    -e kubeinit_inventory_hosted_deployment=true \
                    -i ./hosts/cdk/inventory \
                    ./playbooks/cdk.yml
        EOF
