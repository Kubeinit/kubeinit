---
name: distro_test
on:
  push:
    paths-ignore:
      - 'docs/**'
  pull_request:
  # Run the functional tests every 8 hours.
  # This will help to identify faster if
  # there is a CI failure related to a
  # change in any dependency.
  schedule:
    - cron: '0 */8 * * *'
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up Python3-pip
      run: |
        sudo apt-get --purge autoremove python3-pip
        sudo apt install python3-pip
    - name: Build kubeinit/kubeinit container
      run: podman build -t kubeinit/kubeinit .
    - name: Setup ssh
      run: |
        whoami
        ssh-keygen -t rsa -b 4096 -N '' -f ~/.ssh/id_rsa
        cat ~/.ssh/id_rsa.pub | tee -a ~/.ssh/authorized_keys
        chmod 600 ~/.ssh/authorized_keys
        sudo su <<EOF
          cat ~runner/.ssh/id_rsa.pub | tee -a ~/.ssh/authorized_keys
          chmod 600 ~/.ssh/authorized_keys
        EOF
        ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=accept-new $(hostname) id
        ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=accept-new root@$(hostname) id
        podman secret create kubeinit_ssh_key ~/.ssh/id_rsa
    - name: Run kubeinit/kubeinit container to setup runner as ansible controller
      run: |
        podman run --rm --network host \
            --secret kubeinit_ssh_key \
            localhost/kubeinit/kubeinit:latest \
                -vvv \
                --user runner \
                -e kubeinit_git_clone_path=~/work/kubeinit/kubeinit \
                -e kubeinit_ssh_config_hosts_spec="[[host=nyctea,ssh_hostname=$(hostname)]]" \
                -i kubeinit/inventory \
                kubeinit/setup-playbook.yml
    - name: Run a deployment from the kubeinit/kubeinit container
      run: |
        podman run --rm --network host \
            --secret kubeinit_ssh_key \
            localhost/kubeinit/kubeinit:latest \
                -vvv \
                --user root \
                -e kubeinit_spec=cdk-libvirt-1-1-1-c \
                -e kubeinit_ssh_config_hosts_spec="[[host=nyctea,ssh_hostname=$(hostname)]]" \
                -e kubeinit_stop_after_task='task-prepare-cluster' \
                -e kubeinit_libvirt_create_cloud_user=true \
                -e kubeinit_inventory_hosted_deployment=true \
                -e kubeinit_ignore_validation_checks=true \
                -i kubeinit/inventory \
                kubeinit/playbook.yml
